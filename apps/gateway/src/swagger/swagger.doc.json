{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/check-user-exists": {
      "post": {
        "operationId": "AuthController_checkUserExists",
        "summary": "Check if user already exists",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckUserExistsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUserExistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/sign-up": {
      "post": {
        "operationId": "AuthController_signUp",
        "summary": "Sign up with email & password",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "operationId": "AuthController_signIn",
        "summary": "Sign in with email & password",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/google-sign-in": {
      "post": {
        "operationId": "AuthController_googleSignIn",
        "summary": "Sign in with Google account",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacebookGoogleSignInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/facebook-sign-in": {
      "post": {
        "operationId": "AuthController_facebookSignIn",
        "summary": "Sign in with Facebook account",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacebookGoogleSignInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/apple-sign-in": {
      "post": {
        "operationId": "AuthController_appleSignIn",
        "summary": "Sign in with Apple account",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppleSignInRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "summary": "Reset password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/verify-reset-password-otp": {
      "post": {
        "operationId": "AuthController_verifyResetPasswordOtp",
        "summary": "Reset password verification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordOTPRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOTPResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/auth/recover-password": {
      "post": {
        "operationId": "AuthController_recoverPassword",
        "summary": "Set new password on password reset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/current-user": {
      "get": {
        "operationId": "UserController_currentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/accept-terms-policy": {
      "post": {
        "operationId": "UserController_acceptTermsPolicy",
        "summary": "Accept Application Terms & Condition",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTermsAndPolicyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/set-fcm-token": {
      "post": {
        "operationId": "UserController_setFcmToken",
        "summary": "Set user's device fcm token",
        "parameters": [
          {
            "name": "x-device-id",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFcmTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/check-password": {
      "post": {
        "operationId": "UserController_checkPassword",
        "summary": "Check User's password ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/change-password": {
      "post": {
        "operationId": "UserController_changePassword",
        "summary": "Change user's password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/change-email": {
      "post": {
        "operationId": "UserController_changeEmail",
        "summary": "Change user email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/contact-support": {
      "post": {
        "operationId": "UserController_sendSupportEmail",
        "summary": "Change user email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactSupportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/sign-out": {
      "post": {
        "operationId": "UserController_signOut",
        "summary": "User logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/delete-account": {
      "post": {
        "operationId": "UserController_deleteAccount",
        "summary": "Delete user's account",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/set-drive-token": {
      "post": {
        "operationId": "UserController_setDriveToken",
        "summary": "Set user's drive token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserDriveTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/user/set-user-lang": {
      "post": {
        "operationId": "UserController_setUserLang",
        "summary": "Set user's language",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserLangRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/content/legal-docs": {
      "get": {
        "operationId": "ContentController_legalDocs",
        "summary": "Get Terms & Conditions links",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Legal docs urls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalDocs"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Public"
        ],
        "security": [
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/check-user-name-exists": {
      "post": {
        "operationId": "ProfileController_checkUserNameExists",
        "summary": "Check if user name already exists",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNameRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUserExistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/get-user-profile": {
      "get": {
        "operationId": "ProfileController_getUserProfile",
        "summary": "Get User Profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/generate-user-name": {
      "post": {
        "operationId": "ProfileController_generateUserName",
        "summary": "Generate User's name",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNameRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/set-user-personal-information": {
      "post": {
        "operationId": "ProfileController_setUserPersonalInformation",
        "summary": "Set User's personal information",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonalInformationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/set-user-name": {
      "post": {
        "operationId": "ProfileController_setUserName",
        "summary": "Set User name",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNameRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileBaseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/set-user-avatar": {
      "post": {
        "operationId": "ProfileController_setUserAvatar",
        "summary": "Set User's avatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SetUserAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetUserAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/get-extended-user-profile": {
      "get": {
        "operationId": "ProfileController_getExtendedUserProfile",
        "summary": "Get User Profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileExtendedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/edit-location": {
      "post": {
        "operationId": "ProfileController_editLocation",
        "summary": "Edit Location",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditLocationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/get-user-settings": {
      "get": {
        "operationId": "ProfileController_getUserSettings",
        "summary": "Get User Settings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/profile/search-users": {
      "post": {
        "operationId": "ProfileController_searchUsers",
        "summary": "Search user`s by phone or email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/verification/verify-otp-code": {
      "post": {
        "operationId": "VerificationController_verifyOtpCode",
        "summary": "Verify OTP code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Verification"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/verification/resend-otp-code": {
      "post": {
        "operationId": "VerificationController_resendOtpCode",
        "summary": "Resend OTP code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendOtpCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Verification"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/create-company": {
      "post": {
        "operationId": "CompanyController_createCompany",
        "summary": "Create new company",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/edit-company": {
      "post": {
        "operationId": "CompanyController_editCompany",
        "summary": "Edit company",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/get-company-by-id": {
      "post": {
        "operationId": "CompanyController_getCompanyById",
        "summary": "Get company by id",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyByIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/set-company-logo": {
      "post": {
        "operationId": "CompanyController_setCompanyLogo",
        "summary": "Set Company's logo",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadCompanyLogoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetCompanyLogoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/delete-company": {
      "post": {
        "operationId": "CompanyController_deleteCompany",
        "summary": "Delete company",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyByIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/company/invite-member": {
      "post": {
        "operationId": "CompanyController_inviteMember",
        "summary": "Invite member to company",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Company"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/branch/create-branch": {
      "post": {
        "operationId": "BranchController_createBranch",
        "summary": "Create new branch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBranchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Branch"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/branch/edit-branch": {
      "post": {
        "operationId": "BranchController_editBranch",
        "summary": "Edit branch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBranchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBranchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Branch"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/branch/get-branch-by-id": {
      "post": {
        "operationId": "BranchController_getBranchById",
        "summary": "Get branch by id",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBranchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Branch"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/branch/delete-branch": {
      "post": {
        "operationId": "BranchController_deleteBranch",
        "summary": "Delete branch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Branch"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/role/create-role": {
      "post": {
        "operationId": "RoleController_createCompany",
        "summary": "Create new role",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Role"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/role/list-company-roles": {
      "post": {
        "operationId": "RoleController_listCompanyRoles",
        "summary": "List company roles",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCompanyByIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCompanyRolesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Role"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy/sign-pdf": {
      "post": {
        "operationId": "SignyController_signPdf",
        "summary": "Sign Pdf file",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PdfRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignPdfResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/upload-document": {
      "post": {
        "operationId": "DocumentController_uploadDocument",
        "summary": "Upload Document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/change-status-of-document": {
      "post": {
        "operationId": "DocumentController_changeStatusOfDocument",
        "summary": "Change status of document to active, deleted, archived",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusOfDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/get-document-by-id": {
      "post": {
        "operationId": "DocumentController_getDocumentById",
        "summary": "Get doucment and document setting by id",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/change-document-step-type": {
      "post": {
        "operationId": "DocumentController_changeDocumentStepType",
        "summary": "Change document step type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDocumentStepTypeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/get-user-documents-with-filter": {
      "post": {
        "operationId": "DocumentController_getUserDocuments",
        "summary": "Get all user documents with filters",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserDocumentsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/create-custom-group": {
      "post": {
        "operationId": "DocumentController_createCustomGroup",
        "summary": "Create custom group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentCustomGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/delete-group": {
      "post": {
        "operationId": "DocumentController_deleteGroup",
        "summary": "Delete group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/update-group": {
      "post": {
        "operationId": "DocumentController_updateGroup",
        "summary": "Update group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/check-pass-code": {
      "post": {
        "operationId": "DocumentController_checkPassCode",
        "summary": "Check pass code for truthness",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckPassCodeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckPassCodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/update-settings": {
      "post": {
        "operationId": "DocumentController_updateDocumentSettings",
        "summary": "Update settings of document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/add-document-to-group": {
      "post": {
        "operationId": "DocumentController_addDocumentToGroup",
        "summary": "Add document to group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentToGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/change-bulk-statuses": {
      "post": {
        "operationId": "DocumentController_changeStatusOfDocumentsBulk",
        "summary": "Change bulk statuses of documents",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusOfDocumentsBulkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/add-group-to-favourite": {
      "post": {
        "operationId": "DocumentController_addGroupToFavourite",
        "summary": "Add group to favourite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupToFavouriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/all-document-groups": {
      "get": {
        "operationId": "DocumentController_getAllUserDocumentGroups",
        "summary": "Get all user document groups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserDocumentGroups"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/get-sent-documents": {
      "get": {
        "operationId": "DocumentController_getSentDocuments",
        "summary": "Get all shared documents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/get-received-documents": {
      "get": {
        "operationId": "DocumentController_getRecievedDocuments",
        "summary": "Get all received documents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUserDocuments"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/check-if-pass-code-exists": {
      "post": {
        "operationId": "DocumentController_checkIfPassCodeExixsts",
        "summary": "Check if document has a passCode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllDocumentGroupsAndContactsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/create-document-from-template": {
      "post": {
        "operationId": "DocumentController_createDocumentFromTemplate",
        "summary": "Create new document from templates",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentFromTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document/create-template-from-document": {
      "post": {
        "operationId": "DocumentController_createTemplateFromDocument",
        "summary": "Create new template from document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllDocumentGroupsAndContactsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/import-google-contacts": {
      "post": {
        "operationId": "ContactController_importContactsFromGoogle",
        "summary": "Import contacts from google",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportContactsFromGoogleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/get-user-contacts-with-filter": {
      "post": {
        "operationId": "ContactController_getUserContacts",
        "summary": "Get all contacts of user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserContactsWithFilterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/add-to-favourite": {
      "post": {
        "operationId": "ContactController_addContactToFavourite",
        "summary": "Add contact to favourite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToFavouriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/remove-from-favourite": {
      "post": {
        "operationId": "ContactController_removeContactFromFavourite",
        "summary": "Remove contact from favourite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToFavouriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/create-contact": {
      "post": {
        "operationId": "ContactController_createNewContact",
        "summary": "Create new contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/change-status-of-contact": {
      "post": {
        "operationId": "ContactController_changeStatusOfContact",
        "summary": "Change status of contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusOfContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/create-custom-group": {
      "post": {
        "operationId": "ContactController_createCustomGroup",
        "summary": "Delete contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactCustomGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactCustomGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/add-contact-to-group": {
      "post": {
        "operationId": "ContactController_addContactToGroup",
        "summary": "Add contact to group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/delete-member-from-group": {
      "post": {
        "operationId": "ContactController_deleteMemberFromGroup",
        "summary": "Delete member from group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMemberFromGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/add-to-document-group": {
      "post": {
        "operationId": "ContactController_addContactToDocumentGroup",
        "summary": "Add contact to group of document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToDocumentGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/delete-from-document-group": {
      "post": {
        "operationId": "ContactController_deleteContactFromDocumentGroup",
        "summary": "Delete from document group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteContactFromDocumentGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/delete-contact-group": {
      "post": {
        "operationId": "ContactController_deleteContactGroup",
        "summary": "Delete contact group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGroupIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/update-contact-group": {
      "post": {
        "operationId": "ContactController_updateContactGroup",
        "summary": "Update contact group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/import-from-csv": {
      "post": {
        "operationId": "ContactController_importContactsFromCsv",
        "summary": "Import contacts from csv",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImportContactsFromCsvRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/csv-example": {
      "get": {
        "operationId": "ContactController_getCsvExample",
        "summary": "Get CSV example file url",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCsvExampleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/update-contact": {
      "post": {
        "operationId": "ContactController_updateContact",
        "summary": "Update contact",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/groups-and-contacts": {
      "post": {
        "operationId": "ContactController_getAllDocumentGroupsAndContacts",
        "summary": "Get document groups and contacts",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllDocumentGroupsAndContactsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentGrroupsAndContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/groups-with-contacts": {
      "get": {
        "operationId": "ContactController_getGroupsWithContacts",
        "summary": "Get groups with contacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentGrroupsAndContactsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/add-group-to-favourite": {
      "post": {
        "operationId": "ContactController_addGroupToFavourite",
        "summary": "Add group to favourites",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupToFavouriteRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/contact/change-status-of-contacts-bulk": {
      "post": {
        "operationId": "ContactController_changeStatusOfContactsBulk",
        "summary": "Change status of contacts bulk",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusOfContactsBulkRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/create-input-for-pdf": {
      "post": {
        "operationId": "DocumentInputController_createInputForPdf",
        "summary": "Create input for PDF",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateInputForPdfRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInputForPdfResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/update-input-for-pdf": {
      "post": {
        "operationId": "DocumentInputController_updateInputForPdf",
        "summary": "Update input for PDF",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInputForPdfRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInputForPdfResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/get-inputs-with-filter": {
      "post": {
        "operationId": "DocumentInputController_getInputById",
        "summary": "Get inputs with filter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDocumentInputsWithSearchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentInputsWithSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/remove-input": {
      "post": {
        "operationId": "DocumentInputController_removeDocumentInput",
        "summary": "Remove input",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDocumentInputRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/merge-all-recipients": {
      "post": {
        "operationId": "DocumentInputController_mergeAllContactsToInputs",
        "summary": "Add all recipients to all inputs",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllDocumentGroupsAndContactsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/add-recipient-to-all-inputs": {
      "post": {
        "operationId": "DocumentInputController_addContactToAllInputs",
        "summary": "Add recipient to all inputs",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToAllInputsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/document-input/remove-recipient": {
      "post": {
        "operationId": "DocumentInputController_removeContactFromInput",
        "summary": "Remove recipient from all inputs or specific input",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveContactFromInputRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Document-input"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/create-signatory": {
      "post": {
        "operationId": "SignatoryController_createSignatory",
        "summary": "Create signatory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSignatoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/update-signatory": {
      "post": {
        "operationId": "SignatoryController_updateSignatory",
        "summary": "Update signatory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSignatoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/add-document-signatory": {
      "post": {
        "operationId": "SignatoryController_addSignatoryToDocument",
        "summary": "Add signatory to the document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSignatoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/search-with-filter": {
      "post": {
        "operationId": "SignatoryController_searchSignatoriesWithFilter",
        "summary": "Search signatories with filter and pagination",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchSignatoriesWithFilterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSignatoryWithFilterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/add-input-history": {
      "post": {
        "operationId": "SignatoryController_addInputHistory",
        "summary": "Add input history for signatory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSignatoryInputHistoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/is-pass-code-exists": {
      "post": {
        "operationId": "SignatoryController_isPassCodeExists",
        "summary": "Check if signatory needs to provide passCode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsPassCodeExistsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/get-document-input-history": {
      "post": {
        "operationId": "SignatoryController_getDocumentInputHistory",
        "summary": "Get document input history",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentIdRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentInputHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/delete-signatory": {
      "post": {
        "operationId": "SignatoryController_deleteSignatory",
        "summary": "Delete signatory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSignatoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/sign-order-bulk-update": {
      "post": {
        "operationId": "SignatoryController_signOrderBulkUpdate",
        "summary": "Sign order bulk update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignOrderBulkUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/upload-signature": {
      "post": {
        "operationId": "SignatoryController_uploadSignature",
        "summary": "Upload signature",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadSignatureRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSignatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signatory/delete-signature": {
      "post": {
        "operationId": "SignatoryController_deleteSignature",
        "summary": "Delete specific signature or all signatures",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSignatureRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signatory"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/create-email-template": {
      "post": {
        "operationId": "SignyEmailController_createEmailTemplate",
        "summary": "Create template for email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmailTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/upload-template-files": {
      "post": {
        "operationId": "SignyEmailController_uploadTemplateFilesToS3",
        "summary": "Upload email template files to S3",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadTemplateFilesToS3Request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadTemplateFilesToS3Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/set-company-logo": {
      "post": {
        "operationId": "SignyEmailController_uploadCompanyLogo",
        "summary": "Set company logo in template",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadSignyCompanyLogoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadSignyCompanyLogoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/get-email-template-by-id": {
      "post": {
        "operationId": "SignyEmailController_getSignyEmailTemplateById",
        "summary": "Get template by id with permission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetEmailTemplateWithPermissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignyEmailTemplateByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/send-email": {
      "post": {
        "operationId": "SignyEmailController_sendEmail",
        "summary": "Send email",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignySendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/send-sms": {
      "post": {
        "operationId": "SignyEmailController_sendSms",
        "summary": "Send sms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignySendSmsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendSmsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/get-sms-template-by-id": {
      "post": {
        "operationId": "SignyEmailController_getSignySmsTemplateById",
        "summary": "Get template by id with permission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSmsTemplateWithPermissionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSignySmsTemplateByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-email/create-sms-template": {
      "post": {
        "operationId": "SignyEmailController_createSmsTemplate",
        "summary": "Create template for sms",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSmsTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSmsTemplateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-email"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-share/generate-share-links": {
      "post": {
        "operationId": "SignyShareController_generateShare",
        "summary": "Generate share links (url, Qr Code)",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignyGenerateShareRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignyGenerateShareResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-share"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-share/generate-share-link-for-signatory": {
      "post": {
        "operationId": "SignyShareController_generateShareLinkForSignatory",
        "summary": "Generate share link individually for signatory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateShareLinkForSignatoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateShareLinkForSignatoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-share"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-share/share-document": {
      "post": {
        "operationId": "SignyShareController_shareDocument",
        "summary": "Share document",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignyShareDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-share"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/signy-share/schedule-share": {
      "post": {
        "operationId": "SignyShareController_scheduleShare",
        "summary": "Schedule share",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignyScheduleShareRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Signy-share"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/subscriptions/subscriptions-plans": {
      "get": {
        "operationId": "SubscriptionController_getSubscriptionsPlans",
        "summary": "Get in-APP subscriptions plan",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionsPlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/subscriptions/user-subscription": {
      "get": {
        "operationId": "SubscriptionController_getUserSubscription",
        "summary": "Get user's subscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      },
      "post": {
        "operationId": "SubscriptionController_setUserSubscription",
        "summary": "Set user's subscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserSubscriptionPlanRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      },
      "delete": {
        "operationId": "SubscriptionController_cancelUserSubscription",
        "summary": "Cancel user's subscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    },
    "/api/subscriptions/check-user-coupon": {
      "post": {
        "operationId": "SubscriptionController_checkUserCoupon",
        "summary": "Check user's coupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CouponRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "X_SESSION_KEY": []
          },
          {
            "X_API_KEY": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "",
    "description": "\"Rentil\" - API documentation.<br><br>Link to <a  target='_blank' href=''>API Guide</a>",
    "version": "1.1.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication APIs"
    },
    {
      "name": "Verification",
      "description": "Verification APIs"
    },
    {
      "name": "User",
      "description": "User APIs"
    },
    {
      "name": "Profile",
      "description": "Profile APIs"
    },
    {
      "name": "Public",
      "description": "Public APIs"
    }
  ],
  "servers": [
    {
      "url": "{schema}://undefined",
      "description": "API Server",
      "variables": {
        "schema": {
          "enum": [
            "https"
          ],
          "default": "https"
        }
      }
    },
    {
      "url": "{schema}://localhost:3000",
      "description": "Local API Server",
      "variables": {
        "schema": {
          "enum": [
            "http"
          ],
          "default": "http"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "X_API_KEY": {
        "type": "apiKey",
        "name": "X-API-Key",
        "description": "Application key",
        "in": "header"
      },
      "X_SESSION_KEY": {
        "type": "apiKey",
        "name": "X-Session-Key",
        "description": "Application key",
        "in": "header"
      }
    },
    "schemas": {
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message for error alert"
          },
          "title": {
            "type": "string",
            "description": "Title for error alert"
          },
          "errorCode": {
            "type": "integer",
            "description": "1: AccessDenied<br>2: WrongAppKey<br>3: InternalServerError<br>4: WrongInput<br>5: UserNotFoundByEmail<br>6: UserNotFound<br>7: IncorrectEmailOrPassword<br>8: EmailAlreadyRegistered<br>9: UserCredentialNotFound<br>10: EmailAlreadyVerified<br>11: PasswordNotMatch<br>12: OTPCodeExpired<br>13: WrongPasswordRecoveryToken<br>14: PasswordRecoveryTokenExpired<br>15: UserEmailIsNotVerified<br>16: UserPhoneIsNotVerified<br>17: AccountInactive<br>18: ImageFileRequired<br>19: WrongImageFormat<br>20: FileTooLarge<br>21: EmailWrong<br>22: NotOwnerOfAssignmentOrAccepted<br>23: AssignmentNotFound<br>24: NewsDeletedOrAccepted<br>25: SubmissionNotFound<br>26: ExceededLimitOfFiles<br>27: NewPasswordEqualCurrent<br>28: NewsChannelNotFound<br>29: NewsNotFound<br>30: NewsRoomNotFound<br>31: AlreadyPublished<br>32: InvitationNotFound<br>33: PasswordExists<br>34: StaffNotFoundByEmail<br>35: StaffEmailIsNotVerified<br>36: OTPInvitaionCodeExpired<br>37: StaffCredentialNotFound<br>38: StaffNotFound<br>39: InvitationAlreadyExists<br>40: MediaTypeNotAllowed<br>41: DeletedUserAccount<br>42: WrongPassword<br>43: NotAdmin<br>44: NoFilesInSubmission<br>45: VideoTooLong<br>46: SubmissionNotAccepted<br>47: UserNameAlreadyTaken<br>48: UserLocationOutOfRange<br>49: CategoryNotFound<br>50: CategoryExists<br>51: SubmissionDistanceWrong<br>52: CompanyNotFound<br>53: BranchNotFound<br>54: PhoneAlreadyRegistered<br>55: RoleNotFound<br>56: AlreadyMember<br>57: BuildingNotFound<br>58: ApartmentNotFound<br>59: UnitNotFound<br>60: RoomNotFound<br>61: SignyContactNotFound<br>62: SignyGroupNotFound<br>63: SignyDocumentNotFound<br>64: SignyInputNotFound<br>65: ContactWithSuchEmailExists<br>66: ContactWithSuchPhoneExists<br>67: ContactWithSuchWhatsappExists<br>68: ContactWithSuchTelegramExists<br>69: ContactWithTelegramNickNameExists<br>70: UserNotExists<br>71: SignatoryExists<br>72: SignyEmailTemplateNotFound<br>73: SmsInfoNotFound<br>74: SignatoryNotFound<br>75: PassCodeNotFound<br>76: InvalidPassCode<br>77: InvalidPhoneNumberForIsrael<br>78: SubscriptionPlanNotFound<br>79: CouponNotFound<br>80: SignatoryUserPasswordNotExists<br>81: TemplateNotFound<br>82: UpgradePlanForDocuments<br>83: UpgradePlanForTemplates<br>84: UpgradePlanForSms<br>85: UpgradePlanForStorage<br>86: DocumentAlreadySharedToSignatory"
          },
          "isForceLogout": {
            "type": "boolean",
            "description": "If this parameter is true client app should force user to re-login"
          },
          "isSusbcriptionError": {
            "type": "boolean",
            "description": "If this parameter is true client app should redirect user to subscription screen"
          }
        },
        "required": [
          "message",
          "errorCode",
          "isForceLogout",
          "isSusbcriptionError"
        ]
      },
      "CheckUserExistsRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CheckUserExistsResponse": {
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          },
          "isSignatory": {
            "type": "boolean"
          },
          "isPasswordExists": {
            "type": "boolean"
          }
        },
        "required": [
          "exists",
          "isSignatory",
          "isPasswordExists"
        ]
      },
      "AuthSignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "UploadedImageInfo": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          }
        }
      },
      "UploadedFileInfo": {
        "type": "object",
        "properties": {
          "mimetype": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          }
        },
        "required": [
          "fileUrl"
        ]
      },
      "SignatoryBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          },
          "documentId": {
            "type": "number"
          },
          "tempUserId": {
            "type": "number"
          },
          "signOrderQueue": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "is2faOn": {
            "type": "boolean"
          },
          "is2faVerified": {
            "type": "boolean"
          },
          "isPasswordOn": {
            "type": "boolean"
          },
          "readStatus": {
            "type": "string",
            "enum": [
              "NOT_RECEIVED",
              "SENT",
              "NOT_SENT",
              "OPENED",
              "READ"
            ]
          },
          "passCode": {
            "type": "string"
          },
          "isSelfieWithIdOn": {
            "type": "boolean"
          },
          "drawnSignFile": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedImageInfo"
            }
          },
          "digitalSignature": {
            "type": "string"
          },
          "sslFiles": {
            "$ref": "#/components/schemas/UploadedFileInfo"
          },
          "isVideoRecordOn": {
            "type": "boolean"
          },
          "videoPhrase": {
            "type": "string"
          },
          "nationalId": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "dateOfSign": {
            "type": "string"
          },
          "isVisible": {
            "type": "boolean"
          },
          "roles": {
            "type": "string",
            "enum": [
              "SIGNER",
              "VALIDATOR",
              "VIEWER"
            ]
          },
          "signatureType": {
            "type": "string",
            "enum": [
              "DIGITAL",
              "SIMPLE"
            ]
          },
          "signingStatus": {
            "type": "string",
            "enum": [
              "REJECTED",
              "ASK_FOR_REVIEW",
              "PENDING",
              "SIGNED",
              "DONE",
              "CANCELED"
            ]
          },
          "isMe": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "contactId",
          "documentId",
          "tempUserId",
          "signOrderQueue",
          "name",
          "email",
          "phone",
          "whatsapp",
          "telegram",
          "telegramNick",
          "is2faOn",
          "is2faVerified",
          "isPasswordOn",
          "readStatus",
          "passCode",
          "isSelfieWithIdOn",
          "drawnSignFile",
          "digitalSignature",
          "sslFiles",
          "isVideoRecordOn",
          "videoPhrase",
          "nationalId",
          "color",
          "dateOfSign",
          "isVisible",
          "roles",
          "signatureType",
          "signingStatus",
          "isMe"
        ]
      },
      "SessionUserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "authType": {
            "type": "string",
            "enum": [
              "EMAIL",
              "PHONE",
              "APPLE",
              "GOOGLE",
              "FACEBOOK",
              "GUEST",
              "SIGNATORY"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isPhoneVerified": {
            "type": "boolean"
          },
          "dob": {
            "type": "object"
          },
          "suffix": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "isTermsAndPolicyAccepted": {
            "type": "boolean"
          },
          "isTrailOn": {
            "type": "boolean"
          },
          "isUserProfileSetupRequired": {
            "type": "boolean"
          },
          "canChangeEmail": {
            "type": "boolean"
          },
          "canChangePassword": {
            "type": "boolean"
          },
          "isUserHintsPassed": {
            "type": "boolean"
          },
          "isDriveSyncOn": {
            "type": "boolean"
          },
          "signatory": {
            "$ref": "#/components/schemas/SignatoryBaseInfo"
          }
        },
        "required": [
          "id",
          "authType",
          "email",
          "phone",
          "isEmailVerified",
          "isPhoneVerified",
          "dob",
          "suffix",
          "gender",
          "language",
          "isTermsAndPolicyAccepted",
          "isTrailOn",
          "isUserProfileSetupRequired",
          "canChangeEmail",
          "canChangePassword",
          "isUserHintsPassed",
          "isDriveSyncOn",
          "signatory"
        ]
      },
      "UserBaseInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "avatar": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          },
          "suffix": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserSettingsInfo": {
        "type": "object",
        "properties": {
          "isNotificationsOn": {
            "type": "boolean"
          }
        },
        "required": [
          "isNotificationsOn"
        ]
      },
      "FeatureBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "hint": {
            "type": "string"
          },
          "usersCount": {
            "type": "number"
          },
          "contactsCount": {
            "type": "number"
          },
          "documentsCount": {
            "type": "number"
          },
          "templatesCount": {
            "type": "number"
          },
          "mailsCount": {
            "type": "number"
          },
          "smsCount": {
            "type": "number"
          },
          "storageCapacity": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SubscriptionPlanInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cost": {
            "type": "number"
          },
          "term": {
            "type": "number"
          },
          "discountPercantage": {
            "type": "number"
          },
          "termType": {
            "type": "string"
          },
          "isLimited": {
            "type": "boolean"
          },
          "isSmsPlan": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/FeatureBaseInfo"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "cost",
          "isLimited",
          "isSmsPlan",
          "features"
        ]
      },
      "SubscriptionBaseInfo": {
        "type": "object",
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/SubscriptionPlanInfo"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "INCOMPLETE",
              "INCOMPLETE_EXPIRED",
              "TRIALING",
              "ACTIVE",
              "PAST_DUE",
              "CANCELED",
              "UNPAID"
            ]
          }
        },
        "required": [
          "plan",
          "startDate",
          "status"
        ]
      },
      "UserAnalyticBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "documentsCount": {
            "type": "number",
            "default": 0
          },
          "usersCount": {
            "type": "number",
            "default": 0
          },
          "smsCount": {
            "type": "number",
            "default": 0
          },
          "templatesCount": {
            "type": "number",
            "default": 0
          },
          "storageCapacityUser": {
            "type": "number",
            "default": 0,
            "description": "Storage amount used by user in bytes"
          }
        },
        "required": [
          "id",
          "documentsCount",
          "usersCount",
          "smsCount",
          "templatesCount",
          "storageCapacityUser"
        ]
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionBaseInfo"
          },
          "userAnalytic": {
            "$ref": "#/components/schemas/UserAnalyticBaseInfo"
          }
        },
        "required": [
          "subscription",
          "userAnalytic"
        ]
      },
      "AuthSuccessResponse": {
        "type": "object",
        "properties": {
          "sessionUser": {
            "$ref": "#/components/schemas/SessionUserInfo"
          },
          "userBaseInfo": {
            "$ref": "#/components/schemas/UserBaseInfo"
          },
          "userSettings": {
            "$ref": "#/components/schemas/UserSettingsInfo"
          },
          "userSubscription": {
            "$ref": "#/components/schemas/SubscriptionResponse"
          },
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "sessionUser",
          "accessToken"
        ]
      },
      "AuthSignInRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Here put email of user or phone number"
          },
          "password": {
            "type": "string"
          },
          "fcmToken": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "fcmToken"
        ]
      },
      "FacebookGoogleSignInRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Facebook, Google user access token"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "AppleSignInRequest": {
        "type": "object",
        "properties": {
          "identityToken": {
            "type": "string",
            "description": "A JSON Web Token (JWT) that securely communicates information about the user to your app"
          },
          "appleUserId": {
            "type": "string",
            "description": "An identifier associated with the authenticated user (apple returns this as user field)"
          },
          "firstName": {
            "type": "string",
            "description": "Apple user first name"
          },
          "lastName": {
            "type": "string",
            "description": "Apple user last name"
          }
        },
        "required": [
          "identityToken",
          "appleUserId"
        ]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "OtpCodeResponse": {
        "type": "object",
        "properties": {
          "isSent": {
            "type": "boolean"
          },
          "timeout": {
            "type": "integer"
          }
        },
        "required": [
          "isSent",
          "timeout"
        ]
      },
      "ResetPasswordOTPRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "ResetPasswordOTPResponse": {
        "type": "object",
        "properties": {
          "recoveryToken": {
            "type": "string"
          }
        },
        "required": [
          "recoveryToken"
        ]
      },
      "RecoverPasswordRequest": {
        "type": "object",
        "properties": {
          "recoveryToken": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "recoveryToken",
          "newPassword"
        ]
      },
      "AuthSessionUserResponse": {
        "type": "object",
        "properties": {
          "sessionUser": {
            "$ref": "#/components/schemas/SessionUserInfo"
          },
          "userBaseInfo": {
            "$ref": "#/components/schemas/UserBaseInfo"
          },
          "userSettings": {
            "$ref": "#/components/schemas/UserSettingsInfo"
          },
          "userSubscription": {
            "$ref": "#/components/schemas/SubscriptionResponse"
          }
        },
        "required": [
          "sessionUser"
        ]
      },
      "SetTermsAndPolicyRequest": {
        "type": "object",
        "properties": {
          "setTermsPolicyAccepted": {
            "type": "boolean"
          }
        },
        "required": [
          "setTermsPolicyAccepted"
        ]
      },
      "SetFcmTokenRequest": {
        "type": "object",
        "properties": {
          "fcmToken": {
            "type": "string"
          }
        },
        "required": [
          "fcmToken"
        ]
      },
      "ApiSuccessResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          }
        },
        "required": [
          "ok"
        ]
      },
      "CheckPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "CheckPasswordResponse": {
        "type": "object",
        "properties": {
          "isMatch": {
            "type": "boolean"
          }
        },
        "required": [
          "isMatch"
        ]
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "required": [
          "currentPassword",
          "newPassword"
        ]
      },
      "ChangeEmailRequest": {
        "type": "object",
        "properties": {
          "currentEmail": {
            "type": "string",
            "format": "email"
          },
          "newEmail": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "currentEmail",
          "newEmail"
        ]
      },
      "ContactSupportRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "replyTo": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "DeleteUserAccountResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "isForceLogout": {
            "type": "boolean",
            "description": "If this parameter is true client app should force user to re-login"
          }
        },
        "required": [
          "ok",
          "isForceLogout"
        ]
      },
      "SetUserDriveTokenRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "SetUserLangRequest": {
        "type": "object",
        "properties": {
          "lang": {
            "type": "string",
            "enum": [
              "en",
              "he"
            ]
          }
        },
        "required": [
          "lang"
        ]
      },
      "LegalDocs": {
        "type": "object",
        "properties": {
          "termsAndConditions": {
            "type": "string"
          },
          "privacyPolicy": {
            "type": "string"
          }
        },
        "required": [
          "termsAndConditions",
          "privacyPolicy"
        ]
      },
      "UserNameRequest": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "example": "MichaelBrown"
          }
        },
        "required": [
          "userName"
        ]
      },
      "NotificationSettingsInfo": {
        "type": "object",
        "properties": {
          "isNotificationsOn": {
            "type": "boolean"
          }
        },
        "required": [
          "isNotificationsOn"
        ]
      },
      "UserProfileResponse": {
        "type": "object",
        "properties": {
          "notification": {
            "$ref": "#/components/schemas/NotificationSettingsInfo"
          },
          "authType": {
            "type": "string",
            "enum": [
              "EMAIL",
              "PHONE",
              "APPLE",
              "GOOGLE",
              "FACEBOOK",
              "GUEST",
              "SIGNATORY"
            ]
          },
          "userEmail": {
            "type": "string",
            "format": "email"
          },
          "userBaseInfo": {
            "$ref": "#/components/schemas/UserBaseInfo"
          }
        },
        "required": [
          "authType"
        ]
      },
      "UserNameResponse": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "example": "MichaelBrown123"
          }
        },
        "required": [
          "userName"
        ]
      },
      "CoordsInfo": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "PersonalInformationRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "object",
            "example": "Michael"
          },
          "lastName": {
            "type": "object",
            "example": "Brown"
          },
          "userName": {
            "type": "object",
            "example": "JohnWick"
          },
          "location": {
            "type": "object",
            "example": "Cyprus, Nicosia, Necdet Levent str, 17 apt."
          },
          "suffix": {
            "type": "string",
            "enum": [
              "MR",
              "MRS",
              "MISS",
              "MS",
              "MX",
              "SIR",
              "DR"
            ]
          },
          "dob": {
            "type": "object",
            "format": "YYYY-MM-DD",
            "example": "1994-08-19"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          }
        }
      },
      "PersonalBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "object",
            "example": "John"
          },
          "lastName": {
            "type": "object",
            "example": "Wick"
          },
          "userName": {
            "type": "string",
            "example": "@JohnWick"
          },
          "location": {
            "type": "object",
            "example": "Cyprus, Nicosia, Necdet Levent str, 17 apt."
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "userName"
        ]
      },
      "UserProfileBaseResponse": {
        "type": "object",
        "properties": {
          "personalInfo": {
            "$ref": "#/components/schemas/PersonalBaseInfo"
          }
        }
      },
      "SetUserAvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "avatar"
        ]
      },
      "SetUserAvatarResponse": {
        "type": "object",
        "properties": {
          "uploadedImage": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          }
        }
      },
      "PersonDetailedBaseInfo": {
        "type": "object",
        "properties": {}
      },
      "UserProfileExtendedResponse": {
        "type": "object",
        "properties": {
          "userProfile": {
            "$ref": "#/components/schemas/PersonDetailedBaseInfo"
          },
          "hasNewNotifications": {
            "type": "boolean",
            "default": false
          },
          "userEmail": {
            "type": "string"
          }
        },
        "required": [
          "hasNewNotifications"
        ]
      },
      "EditLocationRequest": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "example": "Cyprus, Nicosia, Necdet Levent str, 17 apt."
          },
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "NotificationSettingsResponse": {
        "type": "object",
        "properties": {
          "notification": {
            "$ref": "#/components/schemas/NotificationSettingsInfo"
          }
        }
      },
      "PageInfo": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 40
          }
        }
      },
      "SearchUserRequest": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "search": {
            "type": "string"
          },
          "searchType": {
            "type": "string",
            "enum": [
              "EMAIL"
            ]
          }
        },
        "required": [
          "searchType"
        ]
      },
      "UserSearchBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "PageInfoResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          },
          "totalItems": {
            "type": "integer"
          }
        },
        "required": [
          "currentPage",
          "perPage",
          "totalPages",
          "totalItems"
        ]
      },
      "SearchUsersResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSearchBaseInfo"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfoResponse"
          }
        },
        "required": [
          "list",
          "pageInfo"
        ]
      },
      "VerificationCodeRequest": {
        "type": "object",
        "properties": {
          "otpType": {
            "type": "string",
            "enum": [
              "CURRENT_EMAIL",
              "RESET_PASSWORD",
              "CHANGE_EMAIL",
              "CHANGE_PHONE",
              "NEW_EMAIL",
              "LAST_PHONE"
            ]
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "otpType",
          "code"
        ]
      },
      "ResendOtpCodeRequest": {
        "type": "object",
        "properties": {
          "otpType": {
            "type": "string",
            "enum": [
              "CURRENT_EMAIL",
              "RESET_PASSWORD",
              "CHANGE_EMAIL",
              "CHANGE_PHONE",
              "NEW_EMAIL",
              "LAST_PHONE"
            ]
          }
        },
        "required": [
          "otpType"
        ]
      },
      "AddressBaseInfo": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "Turkey"
          },
          "city": {
            "type": "string",
            "example": "Istanbul"
          },
          "area": {
            "type": "string",
            "example": "Bebek"
          },
          "street": {
            "type": "string",
            "example": "Exmp. Street"
          },
          "apartment": {
            "type": "number",
            "example": 22
          },
          "entry": {
            "type": "string",
            "example": "Exmp. Entry"
          },
          "building": {
            "type": "number",
            "example": 22
          },
          "zipCode": {
            "type": "string",
            "example": "12413"
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          }
        },
        "required": [
          "country",
          "city",
          "area",
          "street",
          "zipCode"
        ]
      },
      "CreateCompanyRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "companyNationalId": {
            "type": "number",
            "example": 12435313
          },
          "documentId": {
            "type": "number",
            "example": 1
          },
          "companyType": {
            "type": "string",
            "enum": [
              "APARTMENT_MANAGEMENT",
              "PROPERTY_MANAGEMENT",
              "BUILDING_MAINTANCE_MANAGEMENT",
              "MARKETING_COMPANY",
              "BUILDING_COMUNAL_MANAGEMENT",
              "ASSETS_AGENT",
              "OTHER"
            ]
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comment"
          },
          "address": {
            "$ref": "#/components/schemas/AddressBaseInfo"
          }
        },
        "required": [
          "title",
          "companyType",
          "address"
        ]
      },
      "AddressExtraBaseInfo": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "example": "Turkey"
          },
          "city": {
            "type": "string",
            "example": "Istanbul"
          },
          "area": {
            "type": "string",
            "example": "Bebek"
          },
          "street": {
            "type": "string",
            "example": "Exmp. Street"
          },
          "apartment": {
            "type": "number",
            "example": 22
          },
          "entry": {
            "type": "string",
            "example": "Exmp. Entry"
          },
          "building": {
            "type": "number",
            "example": 22
          },
          "zipCode": {
            "type": "string",
            "example": "12413"
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          },
          "id": {
            "type": "number",
            "example": 22
          }
        },
        "required": [
          "country",
          "city",
          "area",
          "street",
          "zipCode"
        ]
      },
      "CompanyBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 31
          },
          "name": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "nationalCompanyId": {
            "type": "number",
            "example": 41341462423
          },
          "owner": {
            "$ref": "#/components/schemas/UserBaseInfo"
          },
          "companyType": {
            "type": "string",
            "enum": [
              "APARTMENT_MANAGEMENT",
              "PROPERTY_MANAGEMENT",
              "BUILDING_MAINTANCE_MANAGEMENT",
              "MARKETING_COMPANY",
              "BUILDING_COMUNAL_MANAGEMENT",
              "ASSETS_AGENT",
              "OTHER"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/AddressExtraBaseInfo"
          },
          "smsCount": {
            "type": "number",
            "example": 1000
          },
          "isSmsAutoRenew": {
            "type": "boolean",
            "example": false
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comments"
          },
          "logo": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "nationalCompanyId",
          "companyType",
          "smsCount",
          "isSmsAutoRenew",
          "status"
        ]
      },
      "CreateCompanyResponse": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/CompanyBaseInfo"
          }
        },
        "required": [
          "company"
        ]
      },
      "EditAddressRequest": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "number",
            "example": 22
          },
          "country": {
            "type": "string",
            "example": "Turkey"
          },
          "city": {
            "type": "string",
            "example": "Istanbul"
          },
          "area": {
            "type": "string",
            "example": "Bebek"
          },
          "street": {
            "type": "string",
            "example": "Exmp. Street"
          },
          "apartment": {
            "type": "number",
            "example": 22
          },
          "entry": {
            "type": "string",
            "example": "Exmp. Entry"
          },
          "building": {
            "type": "number",
            "example": 22
          },
          "zipCode": {
            "type": "string",
            "example": "12413"
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          }
        },
        "required": [
          "addressId"
        ]
      },
      "EditCompanyRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 22
          },
          "title": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "companyNationalId": {
            "type": "number",
            "example": 12435313
          },
          "companyType": {
            "type": "string",
            "enum": [
              "APARTMENT_MANAGEMENT",
              "PROPERTY_MANAGEMENT",
              "BUILDING_MAINTANCE_MANAGEMENT",
              "MARKETING_COMPANY",
              "BUILDING_COMUNAL_MANAGEMENT",
              "ASSETS_AGENT",
              "OTHER"
            ]
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comment"
          },
          "address": {
            "$ref": "#/components/schemas/EditAddressRequest"
          }
        },
        "required": [
          "companyId"
        ]
      },
      "GetCompanyResponse": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/CompanyBaseInfo"
          }
        }
      },
      "GetCompanyByIdRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 22
          }
        },
        "required": [
          "companyId"
        ]
      },
      "UploadCompanyLogoRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 22
          },
          "logo": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "companyId",
          "logo"
        ]
      },
      "SetCompanyLogoResponse": {
        "type": "object",
        "properties": {
          "uploadedImage": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          }
        }
      },
      "InviteMemberRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "lastName": {
            "type": "string",
            "example": "Exmp. LastName"
          },
          "dob": {
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "1994-08-19"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "email": {
            "type": "string",
            "example": "Exmp. Email"
          },
          "phone": {
            "type": "string",
            "example": "Exmp. Phone"
          },
          "roleId": {
            "type": "number",
            "example": 22
          },
          "personId": {
            "type": "number",
            "example": 22
          },
          "userNationalId": {
            "type": "string",
            "example": "Exmp. National Id"
          },
          "companyId": {
            "type": "number",
            "example": 22
          },
          "branchId": {
            "type": "number",
            "example": 22
          },
          "userLocation": {
            "type": "string",
            "example": "Exmp. Location"
          },
          "coords": {
            "$ref": "#/components/schemas/CoordsInfo"
          },
          "invitationMessage": {
            "type": "string",
            "example": "Exmp. message"
          },
          "existingUser": {
            "type": "boolean"
          }
        },
        "required": [
          "roleId"
        ]
      },
      "CreateBranchRequest": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 22
          },
          "title": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comment"
          },
          "address": {
            "$ref": "#/components/schemas/AddressBaseInfo"
          }
        },
        "required": [
          "companyId",
          "title",
          "address"
        ]
      },
      "BranchBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 31
          },
          "name": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "address": {
            "$ref": "#/components/schemas/AddressExtraBaseInfo"
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comments"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyBaseInfo"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "CreateBranchResponse": {
        "type": "object",
        "properties": {
          "branch": {
            "$ref": "#/components/schemas/BranchBaseInfo"
          }
        },
        "required": [
          "branch"
        ]
      },
      "EditBranchRequest": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "number",
            "example": 22
          },
          "title": {
            "type": "string",
            "example": "Exmp. Name"
          },
          "comments": {
            "type": "string",
            "example": "Exmp. Comment"
          },
          "address": {
            "$ref": "#/components/schemas/EditAddressRequest"
          }
        },
        "required": [
          "branchId"
        ]
      },
      "GetBranchResponse": {
        "type": "object",
        "properties": {
          "branch": {
            "$ref": "#/components/schemas/BranchBaseInfo"
          }
        }
      },
      "BranchIdRequest": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "number",
            "example": 22
          }
        },
        "required": [
          "branchId"
        ]
      },
      "RoleTypesInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "BUILDINGS",
              "APARTMENTS",
              "UNITS",
              "ROOMS",
              "USERS",
              "SERVICE_ORDERS",
              "BOARDS",
              "SIGHNITION",
              "SMS_MODULE",
              "MAIL_MODULE"
            ],
            "example": "SERVICE_ORDERS"
          },
          "create": {
            "type": "boolean",
            "example": false
          },
          "read": {
            "type": "boolean",
            "example": false
          },
          "write": {
            "type": "boolean",
            "example": false
          },
          "update": {
            "type": "boolean",
            "example": false
          },
          "delete": {
            "type": "boolean",
            "example": false
          },
          "reports": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "type",
          "create",
          "read",
          "write",
          "update",
          "delete",
          "reports"
        ]
      },
      "CreateRoleRequest": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "number",
            "example": 22
          },
          "companyId": {
            "type": "number",
            "example": 9
          },
          "branchId": {
            "type": "number",
            "example": 9
          },
          "name": {
            "type": "string",
            "example": "Tenant"
          },
          "subTypeName": {
            "type": "string",
            "example": "General Director"
          },
          "type": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleTypesInfo"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "PermissionActionsBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 31
          },
          "type": {
            "type": "string",
            "enum": [
              "BUILDINGS",
              "APARTMENTS",
              "UNITS",
              "ROOMS",
              "USERS",
              "SERVICE_ORDERS",
              "BOARDS",
              "SIGHNITION",
              "SMS_MODULE",
              "MAIL_MODULE"
            ]
          },
          "create": {
            "type": "boolean",
            "example": false
          },
          "read": {
            "type": "boolean",
            "example": false
          },
          "write": {
            "type": "boolean",
            "example": false
          },
          "update": {
            "type": "boolean",
            "example": false
          },
          "delete": {
            "type": "boolean",
            "example": false
          },
          "reports": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "create",
          "read",
          "write",
          "update",
          "delete",
          "reports",
          "status"
        ]
      },
      "RoleBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 31
          },
          "name": {
            "type": "string",
            "example": "Tenant"
          },
          "subTypeName": {
            "type": "string",
            "example": "General Director"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserBaseInfo"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyBaseInfo"
          },
          "branch": {
            "$ref": "#/components/schemas/BranchBaseInfo"
          },
          "permissionActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionActionsBaseInfo"
            }
          }
        },
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "CreateRoleResponse": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleBaseInfo"
          }
        },
        "required": [
          "role"
        ]
      },
      "ListCompanyRolesResponse": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleBaseInfo"
            }
          }
        }
      },
      "PdfRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "pdf": {
            "type": "string",
            "format": "binary"
          },
          "signatoryId": {
            "type": "number"
          }
        },
        "required": [
          "documentId",
          "pdf",
          "signatoryId"
        ]
      },
      "SignyDocumentSettingsInfo": {
        "type": "object",
        "properties": {
          "expirationDate": {
            "type": "string"
          },
          "remindersSchedule": {
            "type": "string"
          },
          "notifyMe": {
            "type": "boolean"
          },
          "isRequiredForEveryone": {
            "type": "boolean"
          },
          "isSignOrderExists": {
            "type": "boolean"
          },
          "notificationLang": {
            "type": "string",
            "enum": [
              "EN",
              "HE"
            ]
          },
          "isShowSignatureOn": {
            "type": "boolean"
          },
          "isVerifySignatureOn": {
            "type": "boolean"
          },
          "isBrandingExists": {
            "type": "boolean"
          },
          "isSameDocumentSign": {
            "type": "boolean"
          },
          "brandLogo": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          },
          "horizontalStack": {
            "type": "boolean"
          },
          "isOneQuestionOnTheScreen": {
            "type": "boolean"
          },
          "backgroundColor": {
            "type": "string"
          },
          "brightnessPercentage": {
            "type": "number"
          },
          "blurPercentage": {
            "type": "number"
          },
          "stepLevel": {
            "type": "number"
          },
          "isAllowReturnToPreviousScreen": {
            "type": "boolean"
          },
          "sendProgressToMembers": {
            "type": "boolean"
          },
          "inputLocation": {
            "type": "string",
            "enum": [
              "LTR",
              "RTL"
            ]
          },
          "theme": {
            "type": "string",
            "enum": [
              "AUTO",
              "DARK",
              "LIGHT"
            ]
          },
          "isPassCodeExists": {
            "type": "boolean"
          },
          "passCode": {
            "type": "string"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "isDriveSyncOn": {
            "type": "boolean"
          },
          "driveOriginalFilePath": {
            "type": "string"
          },
          "driveSignedFilePath": {
            "type": "string"
          },
          "isEditable": {
            "type": "boolean"
          }
        },
        "required": [
          "notifyMe",
          "isRequiredForEveryone",
          "isSignOrderExists",
          "notificationLang",
          "isShowSignatureOn",
          "isVerifySignatureOn",
          "isBrandingExists",
          "isSameDocumentSign",
          "horizontalStack",
          "isOneQuestionOnTheScreen",
          "isAllowReturnToPreviousScreen",
          "sendProgressToMembers",
          "inputLocation",
          "theme",
          "isPassCodeExists",
          "isPrivate",
          "isDriveSyncOn",
          "isEditable"
        ]
      },
      "SignyDocumentCustomGroupsBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "isFavourite": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "title",
          "color",
          "isFavourite"
        ]
      },
      "SignyDocumentExtraInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isForm": {
            "type": "boolean"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "PREPARE",
              "SIGNING",
              "REVIEW",
              "COMPLETED"
            ]
          },
          "originalFile": {
            "$ref": "#/components/schemas/UploadedFileInfo"
          },
          "file": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "uploadDate": {
            "type": "string"
          },
          "extraData": {
            "type": "object"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "stepLevel": {
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/SignyDocumentSettingsInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentCustomGroupsBaseInfo"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED",
              "DRAFT"
            ]
          },
          "documentSigningStatus": {
            "type": "string",
            "enum": [
              "REJECTED",
              "ASK_FOR_REVIEW",
              "PENDING",
              "SIGNED",
              "DONE",
              "CANCELED"
            ]
          },
          "documentVieweStatus": {
            "type": "string",
            "enum": [
              "NOT_RECEIVED",
              "SENT",
              "NOT_SENT",
              "OPENED",
              "READ"
            ]
          },
          "signatories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignatoryBaseInfo"
            }
          }
        },
        "required": [
          "id",
          "isTemplate",
          "isForm",
          "stepType",
          "originalFile",
          "file",
          "name",
          "size",
          "uploadDate",
          "extraData",
          "attachments",
          "stepLevel",
          "settings",
          "status",
          "signatories"
        ]
      },
      "SignPdfResponse": {
        "type": "object",
        "properties": {
          "signedPdf": {
            "type": "string"
          },
          "documentBaseInfo": {
            "$ref": "#/components/schemas/SignyDocumentExtraInfo"
          }
        },
        "required": [
          "signedPdf"
        ]
      },
      "UploadDocumentRequest": {
        "type": "object",
        "properties": {
          "pdf": {
            "type": "string",
            "format": "binary"
          },
          "extraData": {
            "type": "object"
          },
          "isTemplate": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "pdf"
        ]
      },
      "SignyDocumentBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isForm": {
            "type": "boolean"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "PREPARE",
              "SIGNING",
              "REVIEW",
              "COMPLETED"
            ]
          },
          "originalFile": {
            "$ref": "#/components/schemas/UploadedFileInfo"
          },
          "file": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "uploadDate": {
            "type": "string"
          },
          "extraData": {
            "type": "object"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "stepLevel": {
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/SignyDocumentSettingsInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentCustomGroupsBaseInfo"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED",
              "DRAFT"
            ]
          }
        },
        "required": [
          "id",
          "isTemplate",
          "isForm",
          "stepType",
          "originalFile",
          "file",
          "name",
          "size",
          "uploadDate",
          "extraData",
          "attachments",
          "stepLevel",
          "settings",
          "status"
        ]
      },
      "UploadDocumentResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/SignyDocumentBaseInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentCustomGroupsBaseInfo"
            }
          }
        },
        "required": [
          "document",
          "groups"
        ]
      },
      "ChangeStatusOfDocumentRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED",
              "DRAFT"
            ]
          }
        },
        "required": [
          "documentId",
          "status"
        ]
      },
      "DocumentIdRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "signatoryId": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "passCode": {
            "type": "string"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "GetDocumentByIdResponse": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/SignyDocumentExtraInfo"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyBaseInfo"
          }
        }
      },
      "ChangeDocumentStepTypeRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "PREPARE",
              "SIGNING",
              "REVIEW",
              "COMPLETED"
            ]
          }
        },
        "required": [
          "documentId",
          "stepType"
        ]
      },
      "GetUserDocumentsRequest": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED",
              "DRAFT"
            ]
          },
          "signingStatus": {
            "type": "string",
            "enum": [
              "REJECTED",
              "ASK_FOR_REVIEW",
              "PENDING",
              "SIGNED",
              "DONE",
              "CANCELED"
            ]
          },
          "groupId": {
            "type": "number"
          },
          "isTemplate": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "GetAllUserDocuments": {
        "type": "object",
        "properties": {
          "document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentExtraInfo"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfoResponse"
          }
        }
      },
      "CreateCustomGroupRequest": {
        "type": "object",
        "properties": {
          "documentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "color"
        ]
      },
      "CreateDocumentCustomGroupResponse": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/SignyDocumentCustomGroupsBaseInfo"
          }
        },
        "required": [
          "group"
        ]
      },
      "DeleteGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "UpdateGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "CheckPassCodeRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "passCode": {
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "passCode"
        ]
      },
      "CheckPassCodeResponse": {
        "type": "object",
        "properties": {
          "isPassed": {
            "type": "string"
          },
          "isOwner": {
            "type": "string"
          }
        },
        "required": [
          "isPassed",
          "isOwner"
        ]
      },
      "UpdateDocumentSettingsRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/SignyDocumentSettingsInfo"
          }
        },
        "required": [
          "documentId",
          "settings"
        ]
      },
      "AddDocumentToGroupRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "groupId": {
            "type": "number"
          }
        },
        "required": [
          "documentId",
          "groupId"
        ]
      },
      "ChangeStatusOfDocumentsBulkRequest": {
        "type": "object",
        "properties": {
          "documentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED",
              "DRAFT"
            ]
          }
        },
        "required": [
          "documentIds",
          "status"
        ]
      },
      "AddGroupToFavouriteRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "GetAllUserDocumentGroups": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentCustomGroupsBaseInfo"
            }
          }
        }
      },
      "GetAllDocumentGroupsAndContactsRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "CreateDocumentFromTemplateRequest": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "number"
          },
          "extraData": {
            "type": "object"
          },
          "isTemplate": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "templateId"
        ]
      },
      "ImportContactsFromGoogleRequest": {
        "type": "object",
        "properties": {
          "userToken": {
            "type": "string"
          }
        },
        "required": [
          "userToken"
        ]
      },
      "GetUserContactsWithFilterRequest": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "searchType": {
            "type": "string",
            "enum": [
              "NAME",
              "EMAIL",
              "PHONE",
              "GROUPS"
            ]
          },
          "search": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "INTERNAL",
              "CSV"
            ]
          },
          "groupId": {
            "type": "number"
          }
        }
      },
      "SignyCustomGroupsBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "isSignOrderExists": {
            "type": "boolean"
          },
          "signOrderQueue": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "isCustom": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "icon": {
            "type": "string"
          },
          "participatorsCount": {
            "type": "number"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyBaseInfo"
            }
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "isSignOrderExists",
          "signOrderQueue",
          "name",
          "color",
          "isCustom",
          "isFavourite",
          "participatorsCount"
        ]
      },
      "SignyBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "INTERNAL",
              "CSV"
            ]
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "avatar": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "dob": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "signatory": {
            "$ref": "#/components/schemas/SignatoryBaseInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyCustomGroupsBaseInfo"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED"
            ]
          }
        },
        "required": [
          "id",
          "type",
          "fullName",
          "email",
          "phone",
          "whatsapp",
          "telegram",
          "telegramNick",
          "isFavourite",
          "avatar",
          "gender",
          "dob",
          "color",
          "status"
        ]
      },
      "GetGroupsWithSearchResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GetUserContactsResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyBaseInfo"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGroupsWithSearchResponse"
            }
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfoResponse"
          }
        },
        "required": [
          "pageInfo"
        ]
      },
      "AddContactToFavouriteRequest": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "number"
          }
        },
        "required": [
          "contactId"
        ]
      },
      "CreateNewContactRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "companyId": {
            "type": "number"
          },
          "branchId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "isFavourite": {
            "type": "boolean",
            "default": false
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "dob": {
            "type": "string",
            "example": "1998-12-12"
          },
          "color": {
            "type": "string"
          },
          "groupId": {
            "type": "number"
          }
        }
      },
      "ChangeStatusOfContactRequest": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED"
            ]
          }
        },
        "required": [
          "contactId",
          "status"
        ]
      },
      "CreateContactCustomGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "CreateContactCustomGroupResponse": {
        "type": "object",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/GetGroupsWithSearchResponse"
          }
        },
        "required": [
          "group"
        ]
      },
      "AddContactToGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "groupId",
          "contactIds"
        ]
      },
      "DeleteMemberFromGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          },
          "memberId": {
            "type": "number"
          }
        },
        "required": [
          "groupId",
          "memberId"
        ]
      },
      "AddContactToDocumentGroupRequest": {
        "type": "object",
        "properties": {
          "documentGroupId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          }
        },
        "required": [
          "documentGroupId",
          "contactId"
        ]
      },
      "DeleteContactFromDocumentGroupRequest": {
        "type": "object",
        "properties": {
          "documentGroupId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          }
        },
        "required": [
          "documentGroupId",
          "contactId"
        ]
      },
      "ContactGroupIdRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "UpdateContactGroupRequest": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number"
          },
          "signOrderQueue": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        },
        "required": [
          "groupId"
        ]
      },
      "ImportContactsFromCsvRequest": {
        "type": "object",
        "properties": {
          "csv": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "csv"
        ]
      },
      "GetCsvExampleResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url"
        ]
      },
      "UpdateContactRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary"
          },
          "companyId": {
            "type": "number"
          },
          "branchId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "isFavourite": {
            "type": "boolean",
            "default": false
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "OTHER"
            ]
          },
          "dob": {
            "type": "string",
            "example": "1998-12-12"
          },
          "color": {
            "type": "string"
          },
          "groupId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          }
        },
        "required": [
          "contactId"
        ]
      },
      "UpdateContactResponse": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/SignyBaseInfo"
          }
        },
        "required": [
          "contact"
        ]
      },
      "GetDocumentGrroupsAndContactsResponse": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyBaseInfo"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyCustomGroupsBaseInfo"
            }
          }
        }
      },
      "ChangeStatusOfContactsBulkRequest": {
        "type": "object",
        "properties": {
          "contactIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "DISABLED",
              "DELETED",
              "ARCHIVED"
            ]
          }
        },
        "required": [
          "contactIds",
          "status"
        ]
      },
      "SignyInputOptionListInfo": {
        "type": "object",
        "properties": {}
      },
      "CreateInputForPdfRequest": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "documentId": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIGNATURE",
              "INITIALS",
              "TEXT",
              "DROPDOWN",
              "CHECK_BOX",
              "RADIO_BUTTON",
              "DATE_AND_TIME",
              "RATING",
              "ADDRESS",
              "ATTACHMENT"
            ]
          },
          "isRequiredOn": {
            "type": "boolean"
          },
          "isSelectCheckmarkOn": {
            "type": "boolean"
          },
          "contactRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "groupRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "placeholder": {
            "type": "string"
          },
          "hint": {
            "type": "string"
          },
          "signatureColor": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldId": {
            "type": "string"
          },
          "validationType": {
            "type": "string",
            "enum": [
              "EMAIL",
              "PHONE",
              "NATIONAL_ID"
            ]
          },
          "validationMin": {
            "type": "number"
          },
          "validationMax": {
            "type": "number"
          },
          "textFont": {
            "type": "string"
          },
          "textSize": {
            "type": "number"
          },
          "textColor": {
            "type": "string"
          },
          "textDistance": {
            "type": "number"
          },
          "isUnderlineOn": {
            "type": "boolean"
          },
          "isItalicOn": {
            "type": "boolean"
          },
          "isBoldOn": {
            "type": "boolean"
          },
          "float": {
            "type": "string",
            "enum": [
              "LEFT",
              "CENTER",
              "RIGHT"
            ]
          },
          "optionsListData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyInputOptionListInfo"
            }
          },
          "isShowLabelsOn": {
            "type": "boolean"
          },
          "isTime": {
            "type": "boolean"
          },
          "isDate": {
            "type": "boolean"
          },
          "isDuration": {
            "type": "boolean"
          },
          "dateFormat": {
            "type": "string",
            "enum": [
              "SLASH",
              "DOT"
            ]
          },
          "rangeCount": {
            "type": "number"
          },
          "isRangeZero": {
            "type": "boolean"
          },
          "isRangeOne": {
            "type": "boolean"
          },
          "inputOrder": {
            "type": "number"
          },
          "extraData": {
            "type": "object"
          }
        },
        "required": [
          "type"
        ]
      },
      "InputHistoryBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "value": {
            "type": "string"
          },
          "valueJson": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyInputOptionListInfo"
            }
          },
          "attachment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "input": {
            "$ref": "#/components/schemas/SignyDocumentInputSettingsExtraBaseInfo"
          }
        },
        "required": [
          "id",
          "value"
        ]
      },
      "SignyDocumentInputSettingsExtraBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "documentId": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIGNATURE",
              "INITIALS",
              "TEXT",
              "DROPDOWN",
              "CHECK_BOX",
              "RADIO_BUTTON",
              "DATE_AND_TIME",
              "RATING",
              "ADDRESS",
              "ATTACHMENT"
            ]
          },
          "isRequiredOn": {
            "type": "boolean"
          },
          "isSelectCheckmarkOn": {
            "type": "boolean"
          },
          "contactRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "groupRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "placeholder": {
            "type": "string"
          },
          "hint": {
            "type": "string"
          },
          "signatureColor": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldId": {
            "type": "string"
          },
          "validationType": {
            "type": "string",
            "enum": [
              "EMAIL",
              "PHONE",
              "NATIONAL_ID"
            ]
          },
          "validationMin": {
            "type": "number"
          },
          "validationMax": {
            "type": "number"
          },
          "textFont": {
            "type": "string"
          },
          "textSize": {
            "type": "number"
          },
          "textColor": {
            "type": "string"
          },
          "textDistance": {
            "type": "number"
          },
          "isUnderlineOn": {
            "type": "boolean"
          },
          "isItalicOn": {
            "type": "boolean"
          },
          "isBoldOn": {
            "type": "boolean"
          },
          "float": {
            "type": "string",
            "enum": [
              "LEFT",
              "CENTER",
              "RIGHT"
            ]
          },
          "optionsListData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyInputOptionListInfo"
            }
          },
          "isShowLabelsOn": {
            "type": "boolean"
          },
          "isTime": {
            "type": "boolean"
          },
          "isDate": {
            "type": "boolean"
          },
          "isDuration": {
            "type": "boolean"
          },
          "dateFormat": {
            "type": "string",
            "enum": [
              "SLASH",
              "DOT"
            ]
          },
          "rangeCount": {
            "type": "number"
          },
          "isRangeZero": {
            "type": "boolean"
          },
          "isRangeOne": {
            "type": "boolean"
          },
          "inputOrder": {
            "type": "number"
          },
          "extraData": {
            "type": "object"
          },
          "allAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "isEditAvailable": {
            "type": "boolean"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyBaseInfo"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyCustomGroupsBaseInfo"
            }
          },
          "history": {
            "$ref": "#/components/schemas/InputHistoryBaseInfo"
          }
        },
        "required": [
          "id",
          "type",
          "allAttachments"
        ]
      },
      "CreateInputForPdfResponse": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/SignyDocumentInputSettingsExtraBaseInfo"
          }
        },
        "required": [
          "input"
        ]
      },
      "UpdateInputForPdfRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "isRequiredOn": {
            "type": "boolean"
          },
          "isSelectCheckmarkOn": {
            "type": "boolean"
          },
          "contactRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "groupRecipients": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "placeholder": {
            "type": "string"
          },
          "hint": {
            "type": "string"
          },
          "signatureColor": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldId": {
            "type": "string"
          },
          "validationType": {
            "type": "string",
            "enum": [
              "EMAIL",
              "PHONE",
              "NATIONAL_ID"
            ]
          },
          "validationMin": {
            "type": "number"
          },
          "validationMax": {
            "type": "number"
          },
          "textFont": {
            "type": "string"
          },
          "textSize": {
            "type": "number"
          },
          "textColor": {
            "type": "string"
          },
          "textDistance": {
            "type": "number"
          },
          "isUnderlineOn": {
            "type": "boolean"
          },
          "isItalicOn": {
            "type": "boolean"
          },
          "isBoldOn": {
            "type": "boolean"
          },
          "float": {
            "type": "string",
            "enum": [
              "LEFT",
              "CENTER",
              "RIGHT"
            ]
          },
          "optionsListData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyInputOptionListInfo"
            }
          },
          "isShowLabelsOn": {
            "type": "boolean"
          },
          "isTime": {
            "type": "boolean"
          },
          "isDate": {
            "type": "boolean"
          },
          "isDuration": {
            "type": "boolean"
          },
          "dateFormat": {
            "type": "string",
            "enum": [
              "SLASH",
              "DOT"
            ]
          },
          "rangeCount": {
            "type": "number"
          },
          "isRangeZero": {
            "type": "boolean"
          },
          "isRangeOne": {
            "type": "boolean"
          },
          "inputOrder": {
            "type": "number"
          },
          "extraData": {
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateInputForPdfResponse": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/SignyDocumentInputSettingsExtraBaseInfo"
          }
        },
        "required": [
          "input"
        ]
      },
      "GetDocumentInputsWithSearchRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "inputId": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "SIGNATURE",
              "INITIALS",
              "TEXT",
              "DROPDOWN",
              "CHECK_BOX",
              "RADIO_BUTTON",
              "DATE_AND_TIME",
              "RATING",
              "ADDRESS",
              "ATTACHMENT"
            ]
          },
          "signatoryId": {
            "type": "number"
          }
        }
      },
      "GetDocumentInputsWithSearchResponse": {
        "type": "object",
        "properties": {
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyDocumentInputSettingsExtraBaseInfo"
            }
          }
        }
      },
      "RemoveDocumentInputRequest": {
        "type": "object",
        "properties": {
          "inputId": {
            "type": "number"
          }
        }
      },
      "AddContactToAllInputsRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "RemoveContactFromInputRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          },
          "inputId": {
            "type": "number"
          },
          "groupId": {
            "type": "number"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "CreateSignatoryRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "passCode": {
            "type": "string"
          },
          "contactId": {
            "type": "number"
          },
          "groupId": {
            "type": "number"
          },
          "signOrderQueue": {
            "type": "number"
          },
          "existingUserId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "SIGNER",
              "VALIDATOR",
              "VIEWER"
            ]
          },
          "is2faOn": {
            "type": "boolean",
            "default": false
          },
          "isSelfieWithIdOn": {
            "type": "boolean",
            "default": false
          },
          "isVideoRecordOn": {
            "type": "boolean",
            "default": false
          },
          "signatureType": {
            "type": "string",
            "enum": [
              "DIGITAL",
              "SIMPLE"
            ]
          },
          "color": {
            "type": "string"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "UpdateSignatoryRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "passCode": {
            "type": "string"
          },
          "contactId": {
            "type": "number"
          },
          "groupId": {
            "type": "number"
          },
          "signOrderQueue": {
            "type": "number"
          },
          "existingUserId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "telegram": {
            "type": "string"
          },
          "telegramNick": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "SIGNER",
              "VALIDATOR",
              "VIEWER"
            ]
          },
          "is2faOn": {
            "type": "boolean",
            "default": false
          },
          "isSelfieWithIdOn": {
            "type": "boolean",
            "default": false
          },
          "isVideoRecordOn": {
            "type": "boolean",
            "default": false
          },
          "signatureType": {
            "type": "string",
            "enum": [
              "DIGITAL",
              "SIMPLE"
            ]
          },
          "color": {
            "type": "string"
          },
          "signatoryId": {
            "type": "number"
          },
          "nationalId": {
            "type": "string"
          },
          "isVisible": {
            "type": "boolean",
            "default": true
          },
          "signingStatus": {
            "type": "string",
            "enum": [
              "REJECTED",
              "ASK_FOR_REVIEW",
              "PENDING",
              "SIGNED",
              "DONE",
              "CANCELED"
            ]
          },
          "readStatus": {
            "type": "string",
            "enum": [
              "NOT_RECEIVED",
              "SENT",
              "NOT_SENT",
              "OPENED",
              "READ"
            ]
          }
        }
      },
      "AddSignatoryRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "signatoryId": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "passCode": {
            "type": "string"
          },
          "inputId": {
            "type": "number"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "documentId"
        ]
      },
      "SearchSignatoriesWithFilterRequest": {
        "type": "object",
        "properties": {
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfo"
          },
          "id": {
            "type": "number"
          },
          "documentId": {
            "type": "number"
          },
          "contactId": {
            "type": "number"
          },
          "signatureType": {
            "type": "string",
            "enum": [
              "DIGITAL",
              "SIMPLE"
            ]
          },
          "signingStatus": {
            "type": "string",
            "enum": [
              "REJECTED",
              "ASK_FOR_REVIEW",
              "PENDING",
              "SIGNED",
              "DONE",
              "CANCELED"
            ]
          },
          "roles": {
            "type": "string",
            "enum": [
              "SIGNER",
              "VALIDATOR",
              "VIEWER"
            ]
          },
          "search": {
            "type": "string"
          },
          "searchType": {
            "type": "string",
            "enum": [
              "NAME",
              "EMAIL",
              "PHONE",
              "WHATSAPP",
              "TELEGRAM",
              "TELEGRAM_NICK"
            ]
          }
        }
      },
      "SearchSignatoryWithFilterResponse": {
        "type": "object",
        "properties": {
          "signatories": {
            "$ref": "#/components/schemas/SignatoryBaseInfo"
          },
          "pageInfo": {
            "$ref": "#/components/schemas/PageInfoResponse"
          }
        }
      },
      "AddSignatoryInputHistoryRequest": {
        "type": "object",
        "properties": {
          "inputSettingsId": {
            "type": "number"
          },
          "signatoryId": {
            "type": "number"
          },
          "value": {
            "type": "string"
          },
          "valueJson": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignyInputOptionListInfo"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          }
        },
        "required": [
          "inputSettingsId"
        ]
      },
      "IsPassCodeExistsRequest": {
        "type": "object",
        "properties": {
          "signatoryId": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "GetDocumentInputHistoryResponse": {
        "type": "object",
        "properties": {
          "history": {
            "$ref": "#/components/schemas/InputHistoryBaseInfo"
          }
        }
      },
      "DeleteSignatoryRequest": {
        "type": "object",
        "properties": {
          "signatoryId": {
            "type": "number"
          }
        },
        "required": [
          "signatoryId"
        ]
      },
      "SignOrderBulkUpdateRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "signOrderQueue": {
            "type": "number"
          }
        },
        "required": [
          "documentId",
          "signOrderQueue"
        ]
      },
      "UploadSignatureRequest": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string",
            "format": "binary"
          },
          "signatoryId": {
            "type": "number"
          }
        },
        "required": [
          "signature",
          "signatoryId"
        ]
      },
      "UploadSignatureResponse": {
        "type": "object",
        "properties": {
          "signature": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          }
        },
        "required": [
          "signature"
        ]
      },
      "DeleteSignatureRequest": {
        "type": "object",
        "properties": {
          "signatoryId": {
            "type": "number"
          },
          "signatureIndex": {
            "type": "number"
          }
        },
        "required": [
          "signatoryId"
        ]
      },
      "CreateEmailTemplateRequest": {
        "type": "object",
        "properties": {
          "emailTemplateId": {
            "type": "number",
            "nullable": true
          },
          "template": {
            "type": "string"
          }
        },
        "required": [
          "template"
        ]
      },
      "EmailTemplateBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "template": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          },
          "companyLogo": {
            "$ref": "#/components/schemas/UploadedImageInfo"
          }
        },
        "required": [
          "id",
          "template"
        ]
      },
      "CreateTemplateResponse": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/EmailTemplateBaseInfo"
          }
        },
        "required": [
          "template"
        ]
      },
      "UploadTemplateFilesToS3Request": {
        "type": "object",
        "properties": {
          "emailTemplateId": {
            "type": "number",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "UploadTemplateFilesToS3Response": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "number"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileInfo"
            }
          }
        },
        "required": [
          "templateId",
          "files"
        ]
      },
      "UploadSignyCompanyLogoRequest": {
        "type": "object",
        "properties": {
          "emailTemplateId": {
            "type": "number",
            "nullable": false
          },
          "logo": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "emailTemplateId",
          "logo"
        ]
      },
      "UploadSignyCompanyLogoResponse": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/EmailTemplateBaseInfo"
          }
        },
        "required": [
          "template"
        ]
      },
      "GetEmailTemplateWithPermissionRequest": {
        "type": "object",
        "properties": {
          "emailTemplateId": {
            "type": "number",
            "nullable": false
          }
        },
        "required": [
          "emailTemplateId"
        ]
      },
      "GetSignyEmailTemplateByIdResponse": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/EmailTemplateBaseInfo"
          }
        },
        "required": [
          "template"
        ]
      },
      "SignySendEmailRequest": {
        "type": "object",
        "properties": {
          "emailTemplateId": {
            "type": "number",
            "nullable": false
          },
          "signatoriesIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "emailTemplateId",
          "signatoriesIds"
        ]
      },
      "SignySendSmsRequest": {
        "type": "object",
        "properties": {
          "smsTemplateId": {
            "type": "number",
            "nullable": false
          },
          "signatoriesIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "smsTemplateId",
          "signatoriesIds"
        ]
      },
      "SendSmsResponse": {
        "type": "object",
        "properties": {}
      },
      "GetSmsTemplateWithPermissionRequest": {
        "type": "object",
        "properties": {
          "smsTemplateId": {
            "type": "number",
            "nullable": false
          }
        },
        "required": [
          "smsTemplateId"
        ]
      },
      "SmsBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "originator": {
            "type": "string"
          },
          "type": {
            "type": "number",
            "enum": [
              {
                "PhoneVerification": "PHONE_VERIFICATION",
                "ResetPassword": "RESET_PASSWORD",
                "ChangePhone": "CHANGE_PHONE",
                "SignySms": "SIGNY_SMS"
              }
            ]
          }
        },
        "required": [
          "id",
          "message",
          "originator",
          "type"
        ]
      },
      "GetSignySmsTemplateByIdResponse": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/SmsBaseInfo"
          }
        },
        "required": [
          "template"
        ]
      },
      "CreateSmsTemplateRequest": {
        "type": "object",
        "properties": {
          "smsTemplateId": {
            "type": "number",
            "nullable": true
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreateSmsTemplateResponse": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/components/schemas/SmsBaseInfo"
          }
        },
        "required": [
          "template"
        ]
      },
      "SignyGenerateShareRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "SignyGenerateShareResponse": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          },
          "qrCodeUrl": {
            "type": "string",
            "format": "base64"
          }
        },
        "required": [
          "link",
          "qrCodeUrl"
        ]
      },
      "GenerateShareLinkForSignatoryRequest": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "number"
          },
          "signatoryId": {
            "type": "number"
          }
        },
        "required": [
          "documentId",
          "signatoryId"
        ]
      },
      "GenerateShareLinkForSignatoryResponse": {
        "type": "object",
        "properties": {
          "link": {
            "type": "string"
          }
        },
        "required": [
          "link"
        ]
      },
      "SignatoryInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "type"
        ]
      },
      "SignyShareDocumentRequest": {
        "type": "object",
        "properties": {
          "shareType": {
            "type": "string",
            "enum": [
              "ANY_ONE",
              "LISTED_USERS"
            ]
          },
          "documentId": {
            "type": "number"
          },
          "signatories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignatoryInfo"
            }
          }
        },
        "required": [
          "shareType",
          "documentId",
          "signatories"
        ]
      },
      "SignyScheduleShareRequest": {
        "type": "object",
        "properties": {
          "shareType": {
            "type": "string",
            "enum": [
              "ANY_ONE",
              "LISTED_USERS"
            ]
          },
          "documentId": {
            "type": "number"
          },
          "signatories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignatoryInfo"
            }
          },
          "scheduleDate": {
            "type": "string"
          }
        },
        "required": [
          "shareType",
          "documentId",
          "signatories",
          "scheduleDate"
        ]
      },
      "SubscriptionsPlansResponse": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPlanInfo"
            }
          }
        },
        "required": [
          "list"
        ]
      },
      "SetUserSubscriptionPlanRequest": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "planId"
        ]
      },
      "CouponRequest": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "string"
          },
          "planId": {
            "type": "number"
          }
        },
        "required": [
          "coupon"
        ]
      },
      "CouponBaseInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "coupon": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "isPercent": {
            "type": "boolean"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/SubscriptionPlanInfo"
          }
        },
        "required": [
          "id",
          "coupon",
          "amount",
          "isPercent"
        ]
      },
      "CouponResponse": {
        "type": "object",
        "properties": {
          "coupon": {
            "$ref": "#/components/schemas/CouponBaseInfo"
          }
        },
        "required": [
          "coupon"
        ]
      }
    }
  }
}